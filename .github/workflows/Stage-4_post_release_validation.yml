name: "Stage 4 - Post Release Validation"

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Stage 3 - Promote Release Package to APT Stores]
    types:
      - completed

jobs:

  on-success:
    name: On Success or Manual Dispatch
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - run: echo '::info::The triggering workflow passed or manual dispatch was used.'

  validate_ubuntu:
    name: Validate Ubuntu APT Releases
    needs: on-success
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04, ubuntu-22.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Homebridge
        run: |
          curl -sSfL https://repo.homebridge.io/KEY.gpg | sudo gpg --dearmor -o /usr/share/keyrings/homebridge.gpg
          echo "deb [signed-by=/usr/share/keyrings/homebridge.gpg] https://repo.homebridge.io stable main" | sudo tee /etc/apt/sources.list.d/homebridge.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y homebridge

      - name: Display APT Pkg Version
        run: dpkg -l homebridge

      - name: Validate Homebridge
        run: |
          sudo hb-service status
          sudo hb-service view

  validate_rpi_old:
    name: Validate RPI APT Release
    needs: on-success
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [armv6l, armv7l, aarch64]
        include:
        - arch: armv6l
          cpu: arm1176
          base_image: raspios_lite:latest
        - arch: armv7l
          cpu: cortex-a7
          base_image: raspios_lite:latest
        - arch: aarch64
          cpu: cortex-a53
          base_image: raspios_lite_arm64:latest
    steps:
    - uses: pguyot/arm-runner-action@HEAD
      with:
        base_image: ${{ matrix.base_image }}
        cpu: ${{ matrix.cpu }}
        image_additional_mb: 5000
        commands: |
          df -k
          curl -sSfL https://repo.homebridge.io/KEY.gpg | sudo gpg --dearmor -o /usr/share/keyrings/homebridge.gpg
          echo "deb [signed-by=/usr/share/keyrings/homebridge.gpg] https://repo.homebridge.io stable main" | sudo tee /etc/apt/sources.list.d/homebridge.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y homebridge
          dpkg -l homebridge
          sleep 30
          sudo hb-service view
          sudo hb-service status
          sudo hb-service view
          

  validate_rpi:
    needs: on-success
    name: Validate RPI APT Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [
          debian-arm32v7,
          debian-arm64v8,
        ]
        include: 
          - name: debian-arm32v7
            os: ubuntu-latest
            BASE_IMAGE: balenalib/raspberrypi3-debian:bullseye
            QEMU_ARCH: arm

          - name: debian-arm64v8
            os: ubuntu-latest
            BASE_IMAGE: arm64v8/debian:bullseye
            QEMU_ARCH: aarch64

    steps: 
    - uses: actions/checkout@v4

    - name: Linux - Setup Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static:register --reset

    - name: Linux - Build Docker Image
      run: |
        docker build -f test/Dockerfile.debian --build-arg BASE_IMAGE=${{ matrix.BASE_IMAGE }} --build-arg QEMU_ARCH=${{ matrix.QEMU_ARCH }} -t package-build --platform=linux/${{ matrix.QEMU_ARCH }} .

    - name: Linux - Build Package
      run: |
        docker run --rm -v $(pwd):/repo -e PKG_RELEASE_TYPE="${{ needs.create_draft_prerelease.outputs.release_type }}" -e PKG_RELEASE_VERSION="${{ needs.create_draft_prerelease.outputs.version }}" package-build
